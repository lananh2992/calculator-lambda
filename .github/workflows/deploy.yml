name: CI/CD Lambda Calculator on LocalStack

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test-localstack:
    runs-on: ubuntu-latest

    services:
      localstack:
        image: localstack/localstack:0.14.0
        env:
          SERVICES: lambda
          DEBUG: 1
        options: >-
          --health-cmd="curl -s http://localhost:4566/_localstack/health | grep '\"initialized\": true'"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=20
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install awscli awscli-local jq
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          fi

      - name: Package Lambda
        run: |
            mkdir -p build
            cp lambda_function.py build/
            if [ -f requirements.txt ]; then
              pip install -r requirements.txt -t build/
            fi
            cd build
            zip -r ../function.zip .
            cd ..

      - name: Wait for LocalStack to be ready
        run: |
          echo "Waiting for LocalStack..."
          until awslocal lambda list-functions >/dev/null 2>&1; do
            echo "LocalStack not ready yet, waiting 5s..."
            sleep 5
          done
          echo "LocalStack is ready!"

      - name: Deploy Lambda to LocalStack
        run: |
          awslocal lambda delete-function --function-name calculator || true
          awslocal lambda create-function \
            --function-name calculator \
            --runtime python3.10 \
            --handler lambda_function.lambda_handler \
            --zip-file fileb://function.zip \
            --role arn:aws:iam::000000000000:role/lambda-ex

      - name: Test Lambda operations
        run: |
          declare -A tests
          tests["add"]='{"num1":"2","num2":"3","operation":"add"}:5'
          tests["subtract"]='{"num1":"5","num2":"3","operation":"subtract"}:2'
          tests["multiply"]='{"num1":"4","num2":"3","operation":"multiply"}:12'
          tests["divide"]='{"num1":"10","num2":"2","operation":"divide"}:5'

          for key in "${!tests[@]}"; do
            IFS=':' read -r payload expected <<< "${tests[$key]}"
            echo "$payload" > event.json
            awslocal lambda invoke \
              --function-name calculator \
              --payload file://event.json \
              response.json
            result=$(jq -r '.body' response.json)
            echo "Testing $key: expected $expected, got $result"
            if [[ "$result" != "$expected" ]]; then
              echo "Test $key failed!"
              exit 1
            fi
          done
